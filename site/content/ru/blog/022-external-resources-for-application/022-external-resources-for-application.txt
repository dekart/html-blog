  <p>После перехода перехода с <strong>PHP</strong> на <strong>Ruby on Rails</strong> и отказа от изобретения собственных велосипедов, у меня появилась новая страсть, которую необходимо как-то контролировать - встраивание чужих велосипедов в свою систему. При создании <strong>Rails</strong>-приложений довольно сложно обойтись без использования сторонних библиотек. Сложно не потому, что эти библиотеки обязательны, а потому, что грех не использовать такие замечательные вещи, как <code>acts_as_authenticated</code>, <code>better_nested_set</code>, <code>acts_as_dropdown</code>, <code>rspec</code> и многие другие. </p>

<p>Создатели языка <strong>Ruby</strong> и фреймворка <strong>Rails</strong> на славу потрудились над общей схемой использования чужого кода в проектах. В большинстве случаев достаточно просто установить <strong>gem</strong> на сервере или скопировать необходимый плагин в папку <code>vendor/plugins</code>. Однако, даже при такой упрощенной схеме есть тонкие моменты, которые видны не сразу и могут проявиться в самый неподходящий момент. </p>

<p>В одном из наших проектов используется около десятка сторонних библиотек, включая <a href="http://dev.rubyonrails.org/">Edge Rails</a>, подключенных через <code>svn:externals</code>. Для тех кто слабо знаком с тонкостями работы <a href="http://subversion.tigris.org">Subversion</a>, я поясню: такая схема подключения означает, что в локальном репозитории хранится только код приложения, а сторонние библиотеки упоминаются исключительно в виде ссылок на сторонние репозитории. При скачивании последней актуальной версии кода приложения <strong>SVN</strong>-клиент автоматически подключается к внешним репозиториям библиотек и скачивает оттуда последнюю актуальную версию. </p>

<p>В принципе, схема достаточно удобная - в своем репозитории вы храните только свой собственный код, весь сторонний код вы берете непосредственно у его производителя. Однако, стоит задуматься о возможных проблемах. Например, сайт создателя замечательной библиотеки, которую вы везде и всюду используете в своем приложении, неожиданно падает на пару дней (такое периодически бывает с <a href="http://www.rubyforge.org">RubyForge</a>, в моем случае именно он был последней каплей). Или, например, автор решает добавить в библиотеку классную фичу, которая не стыкуется с вашим кодом. И вы не можете  обновить код приложения т.к. завязаны на чужой код, не можете развертывать свое приложение на сервере, у вас связаны руки-ноги. Что делать? О таких вещах лучше подумать заранее.</p>

<p>А вариант предвосхищения подобных проблем, на самом деле, только один - хранить код необходимых библиотек у себя. Однако, казалось бы очевидный метод &#8220;спихать все в репозиторий приложения&#8221; - не самый лучший, особенно если у вас несколько приложений, использующих одни и те же библиотеки. Излишний бардак вам не нужен, его можно избежать. </p>

<p>Немножко порывшись в книжках и статьях по <strong>Subversion</strong>, я откопал замечательный способ - отдельный локальный репозиторий под внешние библиотеки. Делается это так:</p>

<ol>
<li>Создаем репозиторий, например с именем <code>vendor</code>, на том же сервере, где вы храните основной репозиторий приложения.</li>
<li><p>В репозитории создаем папки под каждую из сторонних библиотек:</p>

<pre><code>-+-vendor
 |-acts_as_dropdown
 |-netter_nested_set
 |-rails
</code></pre></li>
<li><p>Выкачиваем необходимые версии библиотек на свой локальный компьютер через <code>svn checkout</code></p></li>
<li><p>В репозитории в папках библиотек создаем папки с названиями, соотвествующими номерам текущих ревизий выкачаных библиотек (можно посмотреть с помощью команды <code>svn info</code> в папке библиотеки):</p>

<pre><code>-+-vendor
 |-acts_as_dropdown
 |  +-12
 |-better_nested_set
 |  +-127
 |-rails
    +-8557
</code></pre></li>
<li><p>Импортируем код из локальных папок в репозиторий в соответствующие папки с номерами версий</p></li>
<li><p>Делаем ветки от папок с номерами версий в папку <code>current</code> для каждой библиотеки:</p>

<pre><code>-+-vendor
 |-acts_as_dropdown
 |  +-12
 |  +-current
 |-better_nested_set
 |  +-127
 |  +-current
 |-rails
    +-8557
    +-current
</code></pre></li>
</ol>

<p>Собственно, это все. С этого момента уже можно начинать использовать локальный репозиторий в своих целях. Для этого нужно в проектах поменять ссылки <code>svn:externals</code> с внешних репозиториев на соответствующие папки <code>current</code> локального репозитория. При следующем обновлении библиотеки будут тянуться уже из локального репозитория.</p>

<p>Если вам потребуется обновить какую-то библиотеку до последней актуальной версии, то достаточно обновить локальные папки с библиотеками командой <code>svn update</code> (или заново выкачать эти библиотеки через <code>svn checkout</code>) и повторить пункты 4-6:</p>

<pre><code>    -+-vendor
     |-acts_as_dropdown
     |  +-12
     |  +-15
     |  +-current
     |-better_nested_set
     |  +-127
     |  +-131
     |  +-current
     |-rails
        +-8557
        +-8560
        +-current
</code></pre>

<p>На мой взгляд, схема более чем удобная. Как итог мы получаем сразу ворох выгод:</p>

<ol>

<li>Держим все библиотеки в своем кармане и не зависим от сторонних источников</li>
<li>Можем обновлять версии библиотек одновременно во всех проектах используя папки <code>current</code> в качестве основных источников</li>
<li>Можем использовать строго определенную версию библиотеки, ссылаясь на папку, соответствующую нужному номеру версии</li>
<li>Можем модернизировать исходный код библиотек и использовать его независимо от того, принимает автор патчи к своим библиотекам или нет</li>
</ol>

<p>Удачного чекаута!</p>

<p><strong>Полезные ссылки:</strong></p>

<ul>
<li><a href="http://svnbook.red-bean.com/">Бесплатная книга по Subversion</a></li>
<li><a href="http://notes.rudomilov.ru/2007/01/30/stavim-subversion-za-5-minut">Ставим Subversion за 5 минут</a></li>
<li><a href="http://subversion.tigris.org/links.html#clients">Клиенты для Subversion</a> (тем, кто пользуется <a href="http://eclipse.org">Eclipse</a>, я рекоммендую использовать <a href="http://subclipse.tigris.org/">Subclipse</a>)</li>
<li><a href="http://www.subversion.ru/">Хостинг для Subversion</a></li>
</ul>


